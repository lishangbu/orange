<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.github.lishangbu</groupId>
    <artifactId>orange-dependencies</artifactId>
    <version>${revision}</version>
    <relativePath>../orange-dependencies/pom.xml</relativePath>
  </parent>
  <artifactId>orange-parent</artifactId>
  <packaging>pom</packaging>
  <url>https://github.com/lishangbu/orange</url>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/license/mit</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>lisb</id>
      <name>Shangbu Li</name>
      <email>shangshili@hotmail.com</email>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/lishangbu/orange.git</connection>
    <developerConnection>scm:git:https://github.com/lishangbu/orange.git</developerConnection>
    <url>https://github.com/lishangbu/orange</url>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/lishangbu/orange/issues</url>
  </issueManagement>
  <dependencies>
    <dependency>
      <groupId>com.github.therapi</groupId>
      <artifactId>therapi-runtime-javadoc</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <!--https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#build-image-->
            <image>
              <name>${docker.repository}/${docker.image.prefix}/${project.artifactId}</name>
              <publish>true</publish>
              <pullPolicy>IF_NOT_PRESENT</pullPolicy>
              <verboseLogging>false</verboseLogging>
            </image>
            <layers>
              <enabled>true</enabled>
            </layers>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <googleJavaFormat>
              <style>GOOGLE</style>
              <!-- or AOSP (optional) -->
              <reflowLongStrings>true</reflowLongStrings>
              <!-- optional -->
              <formatJavadoc>true</formatJavadoc>
              <!-- optional -->
            </googleJavaFormat>
          </java>
          <pom>
            <sortPom>
              <!-- pom 文件的编码方式 -->
              <encoding>${project.build.sourceEncoding}</encoding>
              <!-- 使用的行分隔符 -->
              <lineSeparator>\n</lineSeparator>
              <!-- 是否展开空元素 -->
              <expandEmptyElements>false</expandEmptyElements>
              <!-- 自闭合元素内部是否添加空格 -->
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
              <!-- 是否保留空行 -->
              <keepBlankLines>false</keepBlankLines>
              <!-- 排序后的 pom 文件是否以换行符结束 -->
              <endWithNewline>true</endWithNewline>
              <!-- 缩进空格数 -->
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <!-- 是否对空行进行缩进 -->
              <indentBlankLines>true</indentBlankLines>
              <!-- 是否对 schema 位置进行缩进 -->
              <indentAttribute>schemaLocation</indentAttribute>
              <!-- 元素的排序顺序：https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles -->
              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
              <!-- 是否排序依赖项：https://github.com/Ekryd/sortpom/wiki/SortDependencies -->
              <sortDependencies>scope,groupId,artifactId</sortDependencies>
              <!-- 排序依赖管理：https://github.com/Ekryd/sortpom/wiki/SortDependencies -->
              <sortDependencyManagement>scope,groupId,artifactId</sortDependencyManagement>
              <!-- 排序依赖排除项：https://github.com/Ekryd/sortpom/wiki/SortDependencies -->
              <sortDependencyExclusions>groupId,artifactId</sortDependencyExclusions>
              <!-- 排序插件：https://github.com/Ekryd/sortpom/wiki/SortPlugins -->
              <sortPlugins>groupId,artifactId</sortPlugins>
              <!-- 是否排序属性 -->
              <sortProperties>true</sortProperties>
              <!-- 是否排序模块 -->
              <sortModules>true</sortModules>
              <!-- 是否排序插件执行项 -->
              <sortExecutions>true</sortExecutions>
            </sortPom>
          </pom>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.(id|message|time).*$</includeOnlyProperty>
          </includeOnlyProperties>
        </configuration>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <parameters>true</parameters>
          <release>${java.version}</release>
          <annotationProcessorPaths>
            <!-- lombok 插件 -->
            <annotationProcessorPath>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </annotationProcessorPath>
            <annotationProcessorPath>
              <groupId>com.github.therapi</groupId>
              <artifactId>therapi-runtime-javadoc-scribe</artifactId>
              <version>${therapi-runtime-javadoc.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <parallel>all</parallel>
          <threadCount>8</threadCount>
          <argLine>@{argLine} -javaagent:"${settings.localRepository}/org/mockito/mockito-core/${mockito.version}/mockito-core-${mockito.version}.jar"</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
