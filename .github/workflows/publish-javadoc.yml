name: Publish Javadoc

on:
  push:
    branches:
      - main
    paths:
      # 监视 Java 文件的更改，确保 Javadoc 在代码更改时生成
      - '**/*.java'
  workflow_dispatch:

jobs:
  publish-javadoc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v5

      - name: 设置 Java 环境 - 使用Oracle JDK 25
        uses: actions/setup-java@v5
        with:
          java-version: '25'
          distribution: 'oracle'
          architecture: x64
      - name: 缓存maven依赖
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: 生成Javadoc
        run: |
          ./mvnw compile -P release
          ./mvnw --batch-mode javadoc:aggregate -P release -Dmaven.test.skip=true

      - name: 上传javadoc产物
        uses: actions/upload-artifact@v4
        with:
          name: javadoc-api
          path: |
            target/reports/apidocs

      - name: 检出orange-site
        uses: actions/checkout@v5
        with:
          repository: lishangbu/orange-site
          token: ${{ secrets.PAT }}
          path: orange-site

      - name: 提交并更新API
        run: |
          cd orange-site
          mkdir -p javadoc-api
          cp -vrf ../target/reports/apidocs/* javadoc-api/
          git add javadoc-api
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Update API docs" || echo "No changes to commit"
          git push